{% extends 'base.html.twig' %}

{% block body %}
	<div class="container">
		<div class="card shadow-sm">
			<h1>Sélectionner votre forfait</h1>
			<div
				class="card-body">

				<!-- Affichage des messages flash -->
				{% for label, messages in app.flashes %}
					<div class="alert alert-{{ label }}">
						{% for message in messages %}
							{{ message }}
						{% endfor %}
					</div>
				{% endfor %}

				<!-- Début du formulaire -->
				{{ form_start(form) }}

				<!-- Sélection du type de forfait -->
				<div class="form-group">
					{{ form_label(form.type, null, {'label_attr': {'class': 'form-label'}}) }}
					{{ form_widget(form.type, {'attr': {'class': 'form-control', 'onchange': 'this.form.submit();'}}) }}
				</div>


				<!-- Sélection du plan, affiché seulement si défini -->
				{% if form.plan is defined %}
					<div class="form-group">
						{{ form_label(form.plan, null, {'label_attr': {'class': 'form-label'}}) }}
						{{ form_widget(form.plan, {'attr': {'class': 'form-control', 'onchange': 'checkPlanExpiry(this.value); this.form.submit(); fetchAndAlertCredits(this.value);'}}) }}
					</div>
				{% endif %}

				<!-- Affichage des crédits restants après le rechargement de la page -->
				{% if remainingCredits is defined %}
					<div class="form-group">
						<p>Crédits restants :
							<span>{{ remainingCredits }}</span>
						</p>
					</div>
				{% endif %}

				<!-- Nombre de paiements -->
				{% if form.paymentInstallments is defined %}
					<div class="form-group">
						{{ form_label(form.paymentInstallments, null, {'label_attr': {'class': 'form-label'}}) }}
						{{ form_widget(form.paymentInstallments, {'attr': {'class': 'form-control'}}) }}
					</div>
				{% endif %}

				<!-- Champ de code promotionnel -->
				<div class="form-group">
					{{ form_label(form.promoCode, null, {'label_attr': {'class': 'form-label'}}) }}
					{{ form_widget(form.promoCode, {'attr': {'class': 'form-control'}}) }}
				</div>

				<!-- Autres champs du formulaire -->
				{{ form_rest(form) }}

				<!-- Bouton de soumission -->
				<button type="submit" class="btn btn-general mt-2">Réserver et payer</button>

				{{ form_end(form) }}

				<!-- Lien pour ajouter un nouveau forfait, visible seulement pour l'administrateur -->
				{% if is_granted('ROLE_ADMIN') %}
					<div class="mt-3">
						<a href="{{ path('plan_new') }}" class="btn reserve-btn">Ajouter un nouveau forfait</a>
					</div>
				{% endif %}
			</div>
		</div>
	</div>

	<script>
		function checkPlanExpiry(planId) { // Envoie une requête AJAX au serveur pour vérifier l'expiration du forfait
fetch('{{ path('check_plan_expiry') }}', {
method: 'POST',
headers: {
'Content-Type': 'application/json',
'X-CSRF-Token': '{{ csrf_token('check_plan_expiry') }}'
},
body: JSON.stringify(
{planId: planId}
)
}).then(response => response.json()).then(data => {
if (data.warning) { // Affiche l'alerte si le forfait est proche de l'expiration
alert(data.warning);
}
});
}

function fetchAndAlertCredits(planId) {
    // Effectuer la requête AJAX pour récupérer les crédits restants
    fetch('{{ path('fetch_remaining_credits') }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': '{{ csrf_token('fetch_remaining_credits') }}'
        },
        body: JSON.stringify({ planId: planId })
    })
    .then(response => response.json())
    .then(data => {
        if (data.remainingCredits !== undefined) {
            // Afficher une alerte avec les crédits restants
            alert('Il vous reste ' + data.remainingCredits + ' crédits pour ce forfait.');

            // Soumettre le formulaire après l'alerte
            document.querySelector('form').submit();
        } else if (data.error) {
            alert('Erreur: ' + data.error);
        }
    })
    .catch(error => console.error('Erreur lors de la récupération des crédits restants:', error));
}
	</script>
{% endblock %}
