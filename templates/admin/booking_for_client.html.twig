{% extends 'base.html.twig' %}

{% block body %}
	<div class="container mt-5">
		<h1>Réserver un cours pour un client</h1>

		<!-- Affichage des messages flash -->
		{% for label, messages in app.flashes %}
			{% for message in messages %}
				<div class="alert alert-{{ label }}">
					{{ message }}
				</div>
			{% endfor %}
		{% endfor %}

		<!-- Sélection du client -->
		<form method="GET" action="{{ path('admin_booking_client') }}">
			<div class="form-group">
				<label for="client">Sélectionner un client</label>
				<select name="userId" id="client" class="form-control" onchange="this.form.submit()">
					<option value="">-- Choisissez un client --</option>
					{% for client in clients %}
						<option value="{{ client.id }}" {% if client.id == app.request.query.get('userId') %} selected {% endif %}>
							{{ client.firstName }}
							{{ client.lastName }}
						</option>
					{% endfor %}
				</select>
			</div>
		</form>

		<!-- Afficher les crédits restants pour chaque cours -->
		{% if remainingCredits is not empty %}
			<div class="mt-3">
				<h3>Crédits restants par cours :</h3>
				<ul>
					{% for courseName, credits in remainingCredits %}
						<li>{{ courseName }}
							:
							{{ credits }}
							crédit(s)</li>
					{% endfor %}
				</ul>
			</div>
		{% endif %}

		<!-- Si un client est sélectionné, afficher les cours disponibles -->
		{% if courses is not empty %}
			<form method="POST" action="{{ path('admin_booking_client') }}">
				<input type="hidden" name="userId" value="{{ app.request.query.get('userId') }}">

				<div class="form-group">
					<label for="course">Sélectionner un cours</label>
					<select name="courseId" id="course" class="form-control" required>
						<option value="">-- Choisissez un cours --</option>
						{% for course in courses %}
							<option value="{{ course.id }}" {% if course.id == app.request.query.get('courseId') %} selected {% endif %}>
								{{ course.name }}
								-
								{{ course.startTime|date('d/m/Y H:i') }}
							</option>
						{% endfor %}
					</select>
				</div>

				<!-- Sélection pour la récurrence -->
				<div class="form-group mt-3">
					<label for="isRecurrent">Récurrent</label>
					<input type="checkbox" name="isRecurrent" id="isRecurrent" class="form-check-input">
				</div>

				<div class="form-group mt-2" id="num-occurrences-container" style="display: none;">
					<label for="numOccurrences">Nombre d'occurrences</label>
					<input type="number" name="numOccurrences" id="numOccurrences" class="form-control" value="1" min="1">
				</div>

				<button type="submit" class="btn btn-general mt-3">Réserver pour ce client</button>
			</form>
		{% else %}
			<p>Aucun cours disponible pour ce client.</p>
		{% endif %}
	</div>

	<!-- Script pour gérer la logique de récurrence -->
	<script>
		document.addEventListener('DOMContentLoaded', function () {
const recurrentCheckbox = document.querySelector('#isRecurrent');
const numOccurrencesContainer = document.getElementById('num-occurrences-container');
const numOccurrencesInput = document.getElementById('numOccurrences');

// Afficher ou cacher le champ pour le nombre d'occurrences selon l'état de la case à cocher
recurrentCheckbox.addEventListener('change', function () {
if (recurrentCheckbox.checked) {
numOccurrencesContainer.style.display = 'block';
numOccurrencesInput.required = true;
} else {
numOccurrencesContainer.style.display = 'none';
numOccurrencesInput.required = false;
numOccurrencesInput.value = ''; // Réinitialise la valeur
}
});

// Si la case est déjà cochée au chargement de la page
if (recurrentCheckbox.checked) {
numOccurrencesContainer.style.display = 'block';
numOccurrencesInput.required = true;
}
});
	</script>
{% endblock %}
